name: Tests

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          NODE_OPTIONS: --experimental-vm-modules
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        continue-on-error: true
        id: test-step

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30
          if-no-files-found: ignore

      - name: Generate test summary
        if: always()
        run: |
          if [ "${{ steps.test-step.outcome }}" == "success" ]; then
            echo "## ✅ Tests Passed" >> $GITHUB_STEP_SUMMARY
            echo "All tests completed successfully!" >> $GITHUB_STEP_SUMMARY
            if [ -f "coverage/lcov-report/index.html" ]; then
              echo "Coverage reports have been uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "## ❌ Tests Failed" >> $GITHUB_STEP_SUMMARY
            echo "Some tests failed. Please check the logs above for details." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Annotate test failures
        if: failure()
        run: |
          echo "::error::Tests failed! Please check the test output above and fix any failing tests."
          echo "::error::Make sure your DATABASE_URL environment variable is properly configured."

      - name: Fail job if tests failed
        if: steps.test-step.outcome == 'failure'
        run: exit 1
